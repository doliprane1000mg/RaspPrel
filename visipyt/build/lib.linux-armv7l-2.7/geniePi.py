# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_geniePi', [dirname(__file__)])
        except ImportError:
            import _geniePi
            return _geniePi
        if fp is not None:
            try:
                _mod = imp.load_module('_geniePi', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _geniePi = swig_import_helper()
    del swig_import_helper
else:
    import _geniePi
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


GENIE_ACK = _geniePi.GENIE_ACK
GENIE_NAK = _geniePi.GENIE_NAK
GENIE_READ_OBJ = _geniePi.GENIE_READ_OBJ
GENIE_WRITE_OBJ = _geniePi.GENIE_WRITE_OBJ
GENIE_WRITE_STR = _geniePi.GENIE_WRITE_STR
GENIE_WRITE_STRU = _geniePi.GENIE_WRITE_STRU
GENIE_WRITE_CONTRAST = _geniePi.GENIE_WRITE_CONTRAST
GENIE_REPORT_OBJ = _geniePi.GENIE_REPORT_OBJ
GENIE_REPORT_EVENT = _geniePi.GENIE_REPORT_EVENT
GENIE_OBJ_DIPSW = _geniePi.GENIE_OBJ_DIPSW
GENIE_OBJ_KNOB = _geniePi.GENIE_OBJ_KNOB
GENIE_OBJ_ROCKERSW = _geniePi.GENIE_OBJ_ROCKERSW
GENIE_OBJ_ROTARYSW = _geniePi.GENIE_OBJ_ROTARYSW
GENIE_OBJ_SLIDER = _geniePi.GENIE_OBJ_SLIDER
GENIE_OBJ_TRACKBAR = _geniePi.GENIE_OBJ_TRACKBAR
GENIE_OBJ_WINBUTTON = _geniePi.GENIE_OBJ_WINBUTTON
GENIE_OBJ_ANGULAR_METER = _geniePi.GENIE_OBJ_ANGULAR_METER
GENIE_OBJ_COOL_GAUGE = _geniePi.GENIE_OBJ_COOL_GAUGE
GENIE_OBJ_CUSTOM_DIGITS = _geniePi.GENIE_OBJ_CUSTOM_DIGITS
GENIE_OBJ_FORM = _geniePi.GENIE_OBJ_FORM
GENIE_OBJ_GAUGE = _geniePi.GENIE_OBJ_GAUGE
GENIE_OBJ_IMAGE = _geniePi.GENIE_OBJ_IMAGE
GENIE_OBJ_KEYBOARD = _geniePi.GENIE_OBJ_KEYBOARD
GENIE_OBJ_LED = _geniePi.GENIE_OBJ_LED
GENIE_OBJ_LED_DIGITS = _geniePi.GENIE_OBJ_LED_DIGITS
GENIE_OBJ_METER = _geniePi.GENIE_OBJ_METER
GENIE_OBJ_STRINGS = _geniePi.GENIE_OBJ_STRINGS
GENIE_OBJ_THERMOMETER = _geniePi.GENIE_OBJ_THERMOMETER
GENIE_OBJ_USER_LED = _geniePi.GENIE_OBJ_USER_LED
GENIE_OBJ_VIDEO = _geniePi.GENIE_OBJ_VIDEO
GENIE_OBJ_STATIC_TEXT = _geniePi.GENIE_OBJ_STATIC_TEXT
GENIE_OBJ_SOUND = _geniePi.GENIE_OBJ_SOUND
GENIE_OBJ_TIMER = _geniePi.GENIE_OBJ_TIMER
class genieReplyStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, genieReplyStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, genieReplyStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["cmd"] = _geniePi.genieReplyStruct_cmd_set
    __swig_getmethods__["cmd"] = _geniePi.genieReplyStruct_cmd_get
    if _newclass:cmd = _swig_property(_geniePi.genieReplyStruct_cmd_get, _geniePi.genieReplyStruct_cmd_set)
    __swig_setmethods__["object"] = _geniePi.genieReplyStruct_object_set
    __swig_getmethods__["object"] = _geniePi.genieReplyStruct_object_get
    if _newclass:object = _swig_property(_geniePi.genieReplyStruct_object_get, _geniePi.genieReplyStruct_object_set)
    __swig_setmethods__["index"] = _geniePi.genieReplyStruct_index_set
    __swig_getmethods__["index"] = _geniePi.genieReplyStruct_index_get
    if _newclass:index = _swig_property(_geniePi.genieReplyStruct_index_get, _geniePi.genieReplyStruct_index_set)
    __swig_setmethods__["data"] = _geniePi.genieReplyStruct_data_set
    __swig_getmethods__["data"] = _geniePi.genieReplyStruct_data_get
    if _newclass:data = _swig_property(_geniePi.genieReplyStruct_data_get, _geniePi.genieReplyStruct_data_set)
    def __init__(self): 
        this = _geniePi.new_genieReplyStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _geniePi.delete_genieReplyStruct
    __del__ = lambda self : None;
genieReplyStruct_swigregister = _geniePi.genieReplyStruct_swigregister
genieReplyStruct_swigregister(genieReplyStruct)


def genieReplyAvail():
  return _geniePi.genieReplyAvail()
genieReplyAvail = _geniePi.genieReplyAvail

def genieGetReply(*args):
  return _geniePi.genieGetReply(*args)
genieGetReply = _geniePi.genieGetReply

def genieReadObj(*args):
  return _geniePi.genieReadObj(*args)
genieReadObj = _geniePi.genieReadObj

def genieWriteObj(*args):
  return _geniePi.genieWriteObj(*args)
genieWriteObj = _geniePi.genieWriteObj

def genieWriteContrast(*args):
  return _geniePi.genieWriteContrast(*args)
genieWriteContrast = _geniePi.genieWriteContrast

def genieWriteStr(*args):
  return _geniePi.genieWriteStr(*args)
genieWriteStr = _geniePi.genieWriteStr

def genieSetup(*args):
  return _geniePi.genieSetup(*args)
genieSetup = _geniePi.genieSetup

def genieClose():
  return _geniePi.genieClose()
genieClose = _geniePi.genieClose
# This file is compatible with both classic and new-style classes.


